---
# This is an example playbook to execute Ansible tests.

- name: Verify
  hosts: all
  tasks:
    - name: "RedHat: Verification."
      when: ansible_os_family == 'RedHat'
      block:
        - name: "RedHat: Get installed VirtualBox package version"
          become: true
          become_user: ansible
          ansible.builtin.shell: |
            set -o pipefail 
            yum list installed 2>/dev/null | grep VirtualBox | sed -e 's/\s\+/:/g' | cut -d ':' -f 2 | cut -d '_' -f1
          args:
            executable: /bin/bash
          register: vbox_package_version
          changed_when: vbox_package_version.rc != 0
          failed_when: vbox_package_version.rc != 0
    
        - name: "RedHat: Execute VBoxManage --version"
          become: true
          become_user: ansible
          ansible.builtin.command: VBoxManage --version
          register: vbox_version
          changed_when: vbox_version.rc == 0
          failed_when: false
    
        - name: "RedHat: Check VirtualBox version"
          ansible.builtin.assert:
            that:
              - "vbox_package_version.stdout in vbox_version.stdout"
            fail_msg: "VirtualBox not installed properly"
            success_msg: "VirtualBox {{ vbox_version.stdout }} installed correctly"
    
    - name: "Debian: Verification."
      when: ansible_os_family == 'Debian'
      block:
        - name: "Debian: Get installed VirtualBox package version"
          become: true
          become_user: ansible
          ansible.builtin.shell: |
            set -o pipefail 
            apt list --installed 2>/dev/null|grep virtualbox|sed -e 's/\s\+/:/g'|cut -d ':' -f 2|cut -d '-' -f1
          args:
            executable: /bin/bash
          register: vbox_package_version
          changed_when: vbox_package_version.rc != 0
          failed_when: vbox_package_version.rc != 0
    
        - name: "Execute VBoxManage --version"
          become: true
          become_user: ansible
          ansible.builtin.command: VBoxManage --version
          register: vbox_version
          changed_when: vbox_version.rc == 0
          failed_when: false
    
        - name: Check VirtualBox version
          ansible.builtin.assert:
            that:
              - "vbox_package_version.stdout in vbox_version.stdout"
            fail_msg: "VirtualBox not installed properly"
            success_msg: "VirtualBox {{ vbox_version.stdout }} installed correctly"
